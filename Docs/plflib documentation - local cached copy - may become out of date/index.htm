<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="description"
  content="PLF C++ Library">
  <meta name="keywords"
  content="C++, C, vector, PLF, colony, stack, STL, containers, optimize, performance, pointer, iterator, invalidation">
  <title>PLF C++ Library</title>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
<h1>PLF C++ Library</h1>

<p>PLF is a collection of library modules for C++. At this stage I am only releasing plf::colony and plf::stack, container class templates providing high performance without pointer/iterator invalidation. Please click on the links below to learn more about them and download. More library modules may come in time. All modules are under a <a href="http://en.wikipedia.org/wiki/Zlib_License">Zlib permissive license</a> and support C++03/C++11/C++14. Tested compilers include Clang 3.61-3.71, GCC 4.6-5.1 (32-bit and 64-bit), MS Visual C++ 2010-2015.</p>
<br>
<br>

<p><a href="colony.htm"><strong>plf::colony</strong></a> - An unordered data container providing fast iteration/insertion/erasure while maintaining iterator/pointer validity to non-erased elements.</p>

<p><a href="stack.htm"><strong>plf::stack</strong></a> - A data container similar to std::stack with better performance and no iterator/pointer invalidation.</p>
<br>
<br>

<h3>NZGDC Talk 2015</h3>
<p>The following simplified presentation titled "Colonies, performance and why you should care!" was help at the NZ Game Developers Conference in September 2015.<br>
<a href="http://www.mediafire.com/download/rxbc2zb1chilq11/NZGDC2015+-+Colonies%2C+performance%2C+and+why+you+should+care.ppt">Download powerpoint slides</a><br>
<!-- <a href="http://www.mediafire.com/listen/mex389aldb66bhe/GDCNZ15+talk.mp3">Hear/download audio recording</a> -->
</p>

<p>Contact: <img src="footer.gif" valign="bottom"><br>
plf:: library and this site Copyright (c) 2016, Matthew Bentley</p>
</body>
</html>
